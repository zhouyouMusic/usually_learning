CC 	= /Applications/Xcode.app/Contents/Developer/usr/bin/gcc
CXX = /Applications/Xcode.app/Contents/Developer/usr/bin/g++
STRIP = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip
AR = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

MINIOSVERSION=8.0
OPT_CFLAGS=-Ofast -flto
OPT_LDFLAGS=-flto
OPT_CONFIG_ARGS=

CFLAGS  := -D CJSON_HIDE_SYMBOLS -D SKEGN_IMPLEMENTION -D _GNU_SOURCE -D MG_WEBSOCKET_PING_INTERVAL_SECONDS=5 -D__IPHONE_OS__ -D _DARWIN_C_SOURCE -std=c99 -O2 -fPIE -fPIC
CFLAGS 	+= -I . -I include  -I src -I src/egn/ -I third/ -I third/opus-1.3.1/include -I third/libogg-1.3.3/include -I third/openssl/include
ifeq ($(USE_SSL), 1)
    CFLAGS  += -D MG_ENABLE_SSL=1 -D USE_SSL=1
endif

LDFLAGS += ${OPT_LDFLAGS} -fPIE -miphoneos-version-min=${MINIOSVERSION}
CFLAGS  += -arch $(ARCH) ${OPT_CFLAGS} -fPIE -miphoneos-version-min=${MINIOSVERSION} -isysroot ${DEVELOPER}/Platforms/${PLATFORM}.platform/Developer/SDKs/${PLATFORM}.sdk -fembed-bitcode

ifeq ($(USE_SSL), 1)
	LOCAL_MODULE = skegn-ssl-$(ARCH)-$(TIMESTAMP)
else
	LOCAL_MODULE = skegn-$(ARCH)-$(TIMESTAMP)
endif

SHARED_TARGET = lib$(LOCAL_MODULE).so
STATIC_TARGET = lib$(LOCAL_MODULE).a

LOCAL_OBJ_FILES := 	src/sdk/skegn.o \
                    src/sdk/skegn_jni.o \
					src/egn/sgn_engine.o \
					src/egn/sgn_event.o \
					src/egn/lib/sgn_buf.o \
					src/egn/lib/sgn_msg_queue.o \
					src/egn/lib/sgn_secureconf.o \
					src/egn/lib/sgn_uuid.o \
					src/egn/lib/sgn_dbg.o \
					src/egn/lib/sgn_sha1.o \
					src/egn/lib/sgn_hmac.o \
					src/egn/lib/sgn_sound_intensity.o \
					src/egn/cloud/sgn_opus_enc.o \
					src/egn/platform/sgn_common.o \
					src/egn/platform/sgn_win32.o \
					src/egn/platform/sgn_win32_getmac.o \
					src/egn/platform/sgn_iphoneos.o \
					third/mongoose/mongoose.o \
				   	third/cJSON/cJSON.o \
				   	third/xxtea/sgn_secure_code.o \
				   	third/iOS/BPXLUUIDHandler/SGNBPXLUUIDHandler.o \
				   	third/iOS/Reachability/SGNReachability.o \
                    third/libogg-1.3.3/src/bitwise.o \
                    third/libogg-1.3.3/src/framing.o

OPUS_OBJ = #$(shell find third/opus_libs/iOS/$(ARCH) -name \*.o)
THIRD_OBJ = #$(OPUS_OBJ)
LDFLAGS += -pthread -fPIE -fPIC -lz

ifeq ($(USE_SSL), 1)
	LDFLAGS += third/openssl/libs/ios/libcrypto.a
	LDFLAGS += third/openssl/libs/ios/libssl.a	
endif 

ifeq ($(SERVER), native)
CFLAGS          += -D USE_NATIVE -D USE_NATIVE_EVAL -D USE_NATIVE_ALI -D USE_NATIVE_REC -D USE_NATIVE_VAD
LOCAL_OBJ_FILES += src/egn/lib/sgn_instance.o \
                   src/egn/lib/sgn_file.o \
                   src/egn/native/sgn_native_ali_module.o \
                   src/egn/native/sgn_native_eval_module.o \
                   src/egn/native/sgn_native_open_module.o \
                   src/egn/native/sgn_native_rec_module.o \
                   src/egn/native/sgn_native_vad_module.o \
                   src/egn/native/sgn_native.o \
				   src/egn/native/sgn_native_event.o \
                   src/egn/native/sgn_auth.o 
THIRD_OBJ += $(shell find ./third/native_corelib/ios/$(ARCH) -name \*.o)
endif

$(SHARED_TARGET):$(LOCAL_OBJ_FILES)
	$(CXX) $^ $(LDFLAGS) -shared -o $@
	#$(STRIP) --strip-unneeded $@

$(STATIC_TARGET):$(LOCAL_OBJ_FILES)
	$(AR) crv $@ $^ $(THIRD_OBJ)
	#$(STRIP) --strip-unneeded $@

all:$(LOCAL_OBJ_FILES) $(STATIC_TARGET)

clean:
	rm -rf $(STATIC_TARGET) $(LOCAL_OBJ_FILES)